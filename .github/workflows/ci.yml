name: CI - Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Cancel in-progress runs for the same workflow and branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    # Environment variables to handle firewall restrictions
    env:
      # Disable telemetry for blocked endpoints
      CHECKPOINT_DISABLE: 1
      NEXT_TELEMETRY_DISABLED: 1
      # Test database URL
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
      # NextAuth configuration for tests
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: test-secret-key-for-ci
    
    # Setup PostgreSQL for tests
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: web/pnpm-lock.yaml
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile
      
      - name: Generate Prisma Client
        working-directory: web
        run: pnpm exec prisma generate
      
      - name: Run database migrations
        working-directory: web
        run: pnpm exec prisma migrate deploy
      
      - name: Lint code
        working-directory: web
        run: pnpm run format
      
      - name: Type check
        working-directory: web
        run: pnpm run type-check
      
      - name: Run unit tests
        working-directory: web
        run: pnpm run test
      
      - name: Run tests with coverage
        working-directory: web
        run: pnpm run test:coverage
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./web/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Build application
        working-directory: web
        run: pnpm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-output
          path: web/.next
          retention-days: 7

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    
    env:
      CHECKPOINT_DISABLE: 1
      NEXT_TELEMETRY_DISABLED: 1
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: test-secret-key-for-ci
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: web/pnpm-lock.yaml
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright browsers
        working-directory: web
        run: pnpm exec playwright install --with-deps chromium
      
      - name: Generate Prisma Client
        working-directory: web
        run: pnpm exec prisma generate
      
      - name: Run database migrations
        working-directory: web
        run: pnpm exec prisma migrate deploy
      
      - name: Build application
        working-directory: web
        run: pnpm run build
      
      - name: Run E2E tests
        working-directory: web
        run: pnpm run test:e2e
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: web/playwright-report
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run CodeQL analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript,typescript
      
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
      
      - name: Run npm audit
        working-directory: web
        run: pnpm audit --audit-level=high
        continue-on-error: true
